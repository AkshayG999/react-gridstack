{"version":3,"sources":["ScrollableChildren/Organization.js","ScrollableChildren/Department.js","ScrollableChildren/Employee.js","ScrollableChildren/Modal.js","ScrollableChildren/ScrollableChildren.js","App.js","index.js"],"names":["Organization","organizations","setSelectedOrganization","setOrganizations","handleUpdateClick","useState","orgName","setOrgName","handleFormSubmit","e","a","preventDefault","axios","post","baseUrl","name","response","data","prevOrganizations","console","error","className","onSubmit","style","marginBottom","type","value","onChange","target","placeholder","required","map","org","index","margin","cursor","display","onClick","marginLeft","Department","organizationId","departments","setDepartments","setSelectedDepartment","newDepartmentName","setNewDepartmentName","handleCreateDepartment","Error","find","dept","newDepartment","Employee","selectedDepartment","newEmployeeName","setNewEmployeeName","newEmployeePosition","setNewEmployeePosition","employees","setEmployees","useEffect","fetchEmployees","get","_id","handleAddEmployee","position","emp","Modal","show","handleClose","handleSave","title","children","stopPropagation","ScrollableChildren","selectedOrganization","modalData","setModalData","showModal","setShowModal","fetchData","handleSaveModal","put","window","location","reload","direction","SplitDirection","Horizontal","Vertical","newDepartments","charAt","toUpperCase","slice","Page","App","page","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.c8df09ba.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./TileX.css\";\nimport { baseUrl } from '../config.json'\n\nfunction Organization({ organizations, setSelectedOrganization, setOrganizations, handleUpdateClick }) {\n  const [orgName, setOrgName] = useState(\"\");\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\n        `${baseUrl}/organization/add`,\n        { name: orgName }\n      );\n      setSelectedOrganization(response.data);\n      setOrganizations((prevOrganizations) => [...prevOrganizations, response.data]);\n      setOrgName(\"\");\n    } catch (error) {\n      console.error(\"Error adding organization:\", error);\n    }\n  };\n\n  return (\n    <div className=\"tile-y\">\n      <form onSubmit={handleFormSubmit} style={{ marginBottom: \"10px\" }}>\n        <input\n          type=\"text\"\n          value={orgName}\n          onChange={(e) => setOrgName(e.target.value)}\n          placeholder=\"Enter organization name\"\n          required\n        />\n        <button type=\"submit\">Add Organization</button>\n      </form>\n      {organizations.map((org, index) => (\n        <div key={index} style={{ margin: \"5px\" }}>\n          <div\n            style={{ cursor: \"pointer\", display: \"inline-block\" }}\n            onClick={() => setSelectedOrganization(org)}\n          >\n            <strong>{org.name}</strong>\n          </div>\n          <button\n            style={{ marginLeft: \"10px\" }}\n            onClick={() => handleUpdateClick({ type: 'organization', data: org })}\n          >\n            Update\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Organization;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from '../config.json'\n\n\nfunction Department({ organizationId, departments, setDepartments, setSelectedDepartment, handleUpdateClick }) {\n  const [newDepartmentName, setNewDepartmentName] = useState(\"\");\n\n  const handleCreateDepartment = async () => {\n    try {\n      if (!newDepartmentName) {\n        throw new Error(\"Department name cannot be empty\");\n      }\n      if (departments.find((dept) => dept.name === newDepartmentName)) {\n        throw new Error(\"Department name already exists\");\n      }\n      if (!organizationId) {\n        throw new Error(\"Organization ID is required\");\n      }\n      const response = await axios.post(\n        `${baseUrl}/organization/${organizationId}/add-department`,\n        {\n          name: newDepartmentName\n        }\n      );\n      const newDepartment = response.data;\n      setNewDepartmentName(\"\"); // Clear the input field after successful creation\n      setDepartments([...departments, newDepartment]); // Update the departments array\n    } catch (error) {\n      console.error(\"Error creating department:\", error);\n    }\n  };\n\n  return (\n    <div className=\"tile-y\">\n      <div>\n        <input\n          type=\"text\"\n          value={newDepartmentName}\n          placeholder=\"Enter department name\"\n          onChange={(e) => setNewDepartmentName(e.target.value)}\n          required\n        />\n        <button onClick={handleCreateDepartment}>Create New Department</button>\n      </div>\n      {departments.map((dept, index) => (\n        <div key={index} style={{ margin: \"5px\" }}>\n          <div\n            style={{ cursor: \"pointer\", display: \"inline-block\" }}\n            onClick={() => setSelectedDepartment(dept)}\n          >\n            <strong>{dept.name}</strong>\n          </div>\n          <button\n            style={{ marginLeft: \"10px\" }}\n            onClick={() => handleUpdateClick({ type: 'department', data: dept })}\n          >\n            Update\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Department;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from '../config.json'\n\n\nfunction Employee({ organizationId, selectedDepartment, handleUpdateClick }) {\n    const [newEmployeeName, setNewEmployeeName] = useState(\"\");\n    const [newEmployeePosition, setNewEmployeePosition] = useState(\"\");\n    const [employees, setEmployees] = useState([]);\n\n    useEffect(() => {\n        // Fetch the list of employees initially and whenever the selected department changes\n        if (selectedDepartment) {\n            fetchEmployees();\n        } else {\n            setEmployees([]); // Clear employees when there is no selected department\n        }\n    }, [selectedDepartment]);\n\n    const fetchEmployees = async () => {\n        try {\n            if (selectedDepartment) {\n                const response = await axios.get(\n                    `${baseUrl}/organization/${organizationId}/${selectedDepartment._id}/employees`\n                );\n                setEmployees(response.data);\n            }\n        } catch (error) {\n            console.error(\"Error fetching employees:\", error);\n        }\n    };\n\n    const handleAddEmployee = async () => {\n        try {\n            const response = await axios.post(\n                `${baseUrl}/organization/${organizationId}/${selectedDepartment._id}/add-employee`,\n                {\n                    name: newEmployeeName,\n                    position: newEmployeePosition\n                }\n            );\n            fetchEmployees(); // Fetch the updated list of employees after adding a new employee\n            setNewEmployeeName(\"\");\n            setNewEmployeePosition(\"\"); // Clear the input fields\n        } catch (error) {\n            console.error(\"Error adding employee:\", error);\n        }\n    };\n\n    return (\n        <div className=\"tile-y\">\n            {selectedDepartment ? (\n                <>\n                    <div>\n                        <input\n                            type=\"text\"\n                            value={newEmployeeName}\n                            onChange={(e) => setNewEmployeeName(e.target.value)}\n                            placeholder=\"Enter employee name\"\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            value={newEmployeePosition}\n                            onChange={(e) => setNewEmployeePosition(e.target.value)}\n                            placeholder=\"Enter employee position\"\n                            required\n                        />\n                        <button onClick={handleAddEmployee}>Add Employee</button>\n                    </div>\n                    <div>\n                        <strong>List of Employees:</strong>\n                        <ul>\n                            {employees.map((emp, index) => (\n                                <li key={index} style={{ margin: \"5px\" }}>\n                                    <span>{emp.name} - {emp.position}</span>\n                                    <button\n                                        style={{ marginLeft: \"10px\" }}\n                                        onClick={() => handleUpdateClick({ type: 'employee', data: emp })}\n                                    >\n                                        Update\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </>\n            ) : (\n                <div>Please select a department to view employees.</div>\n            )}\n        </div>\n    );\n}\n\nexport default Employee;\n","import React from 'react';\nimport './Modal.css';\n\nfunction Modal({ show, handleClose, handleSave, title, children }) {\n  return (\n    <div className={`modal ${show ? 'show' : ''}`} onClick={handleClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h4 className=\"modal-title\">{title}</h4>\n          <button className=\"close\" onClick={handleClose}>&times;</button>\n        </div>\n        <div className=\"modal-body\">\n          {children}\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-secondary\" onClick={handleClose}>Close</button>\n          <button className=\"btn btn-primary\" onClick={handleSave}>Save changes</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import { useEffect, useState } from \"react\";\nimport Organization from \"./Organization\";\nimport Department from \"./Department\";\nimport Employee from \"./Employee\";\nimport Modal from \"./Modal\";\nimport ReactSplit, { SplitDirection } from \"@devbookhq/splitter\";\nimport axios from \"axios\";\nimport { baseUrl } from '../config.json'\n\nfunction ScrollableChildren() {\n  const [organizations, setOrganizations] = useState([]);\n  const [selectedOrganization, setSelectedOrganization] = useState(null);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [modalData, setModalData] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(\n          `${baseUrl}/organization`\n        );\n        setOrganizations(response.data);\n      } catch (error) {\n        console.error(\"Error fetching organizations:\", error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleOrganizationSelect = (org) => {\n    setSelectedOrganization(org);\n    setSelectedDepartment(null); // Reset department when organization changes\n  };\n\n  const handleUpdateClick = (data) => {\n    setModalData(data);\n    setShowModal(true);\n  };\n\n  const handleSaveModal = async () => {\n    try {\n      if (modalData.type === 'organization') {\n        await axios.put(\n          `${baseUrl}/organization/update/${modalData.data._id}`,\n          { name: modalData.data.name }\n        );\n      } else if (modalData.type === 'department') {\n        await axios.put(\n          `${baseUrl}/organization/${selectedOrganization._id}/update-department/${modalData.data._id}`,\n          { name: modalData.data.name }\n        );\n      } else if (modalData.type === 'employee') {\n        await axios.put(\n          `${baseUrl}/organization/${selectedOrganization._id}/${selectedDepartment._id}/update-employee/${modalData.data._id}`,\n          { name: modalData.data.name, position: modalData.data.position }\n        );\n      }\n      setShowModal(false);\n      setModalData(null);\n      window.location.reload(); // Refresh the page to show the updated data\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n\n  return (\n    <>\n      <ReactSplit direction={SplitDirection.Horizontal}>\n        <Organization\n          organizations={organizations}\n          setSelectedOrganization={handleOrganizationSelect}\n          setOrganizations={setOrganizations}\n          handleUpdateClick={handleUpdateClick}\n        />\n        {selectedOrganization && (\n          <ReactSplit direction={SplitDirection.Vertical}>\n            <Department\n              organizationId={selectedOrganization._id}\n              departments={selectedOrganization.departments}\n              setDepartments={(newDepartments) => {\n                setSelectedOrganization({\n                  ...selectedOrganization,\n                  departments: newDepartments,\n                });\n              }}\n              setSelectedDepartment={setSelectedDepartment}\n              handleUpdateClick={handleUpdateClick}\n            />\n            <Employee\n              organizationId={selectedOrganization._id}\n              departments={selectedOrganization.departments}\n              selectedDepartment={selectedDepartment}\n              handleUpdateClick={handleUpdateClick}\n            />\n          </ReactSplit>\n        )}\n      </ReactSplit>\n      {modalData && (\n        <Modal\n          show={showModal}\n          handleClose={() => setShowModal(false)}\n          handleSave={handleSaveModal}\n          title={`Update ${modalData.type.charAt(0).toUpperCase() + modalData.type.slice(1)}`}\n        >\n          <div>\n            <input\n              type=\"text\"\n              value={modalData.data.name}\n              onChange={(e) => setModalData({ ...modalData, data: { ...modalData.data, name: e.target.value } })}\n              placeholder=\"Enter name\"\n              required\n            />\n            {modalData.type === 'employee' && (\n              <input\n                type=\"text\"\n                value={modalData.data.position}\n                onChange={(e) => setModalData({ ...modalData, data: { ...modalData.data, position: e.target.value } })}\n                placeholder=\"Enter position\"\n                required\n              />\n            )}\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default ScrollableChildren;\n","import { useState } from \"react\";\nimport \"./styles.css\";\nimport \"./App.css\";\n\nimport ScrollableChildren from \"./ScrollableChildren/ScrollableChildren\";\n\nconst Page = {\n  ScrollableChildren: \"ScrollableChildren\",\n};\n\nfunction App() {\n  const [page, setPage] = useState(Page.ScrollableChildren);\n\n  return (\n    <div className=\"app\">\n      <div className=\"splits\">\n        {page === Page.ScrollableChildren && (\n          <>\n            <ScrollableChildren />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n\n"],"sourceRoot":""}